"""Alter Blog App Models

Revision ID: 1ebfb7790212
Revises: 3ebd66f9cbe6
Create Date: 2025-10-11 20:23:33.783896

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ebfb7790212'
down_revision: Union[str, None] = '3ebd66f9cbe6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_blog_categories_slug', table_name='blog_categories')
    op.create_unique_constraint(None, 'blog_categories', ['slug'])
    op.drop_constraint('blog_categories_parent_id_fkey', 'blog_categories', type_='foreignkey')
    op.drop_column('blog_categories', 'parent_id')
    op.drop_index('ix_blog_comments_is_approved', table_name='blog_comments')
    op.drop_index('ix_blog_comments_user_id', table_name='blog_comments')
    op.add_column('blog_posts', sa.Column('generation_status', sa.String(length=20), nullable=True))
    op.add_column('blog_posts', sa.Column('raw_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('blog_posts', 'tags',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('blog_posts', 'meta_keywords',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.drop_index('idx_blog_category_status', table_name='blog_posts')
    op.drop_index('idx_blog_status_published', table_name='blog_posts')
    op.drop_index('ix_blog_posts_published_at', table_name='blog_posts')
    op.create_index('idx_blog_status_gen', 'blog_posts', ['status', 'generation_status'], unique=False)
    op.create_index(op.f('ix_blog_posts_generation_status'), 'blog_posts', ['generation_status'], unique=False)
    op.add_column('blog_sections', sa.Column('meta_info', postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.alter_column('blog_sections', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('blog_sections', 'jsonmeta')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('blog_sections', sa.Column('jsonmeta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.alter_column('blog_sections', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('blog_sections', 'meta_info')
    op.drop_index(op.f('ix_blog_posts_generation_status'), table_name='blog_posts')
    op.drop_index('idx_blog_status_gen', table_name='blog_posts')
    op.create_index('ix_blog_posts_published_at', 'blog_posts', ['published_at'], unique=False)
    op.create_index('idx_blog_status_published', 'blog_posts', ['status', 'published_at'], unique=False)
    op.create_index('idx_blog_category_status', 'blog_posts', ['category_id', 'status'], unique=False)
    op.alter_column('blog_posts', 'meta_keywords',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('blog_posts', 'tags',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.drop_column('blog_posts', 'raw_response')
    op.drop_column('blog_posts', 'generation_status')
    op.create_index('ix_blog_comments_user_id', 'blog_comments', ['user_id'], unique=False)
    op.create_index('ix_blog_comments_is_approved', 'blog_comments', ['is_approved'], unique=False)
    op.add_column('blog_categories', sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('blog_categories_parent_id_fkey', 'blog_categories', 'blog_categories', ['parent_id'], ['id'])
    op.drop_constraint(None, 'blog_categories', type_='unique')
    op.create_index('ix_blog_categories_slug', 'blog_categories', ['slug'], unique=True)
    # ### end Alembic commands ###
